{"version":3,"sources":["components/Navbar.js","components/contact/Contact.js","action/ContactAction.js","constant/type.js","components/contact/Contacts.js","reducer/ContactReducer.js","reducer/index.js","Store.js","components/contact/AddContact.js","components/contact/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Contact","contact","selectAll","dispatch","useDispatch","name","phone","email","id","checked","type","size","round","onClick","payload","deleteContact","Contacts","useState","setSelectAll","contacts","useSelector","state","selectedContacts","useEffect","map","length","class","value","htmlFor","key","initialState","combineReducers","action","arr","filter","values","val","store","createStore","rootReducer","composeWithDevTools","AddContact","history","useHistory","setName","setEmail","setPhone","onSubmit","e","preventDefault","new_contact","shortid","generate","push","createContact","placeholder","onChange","target","EditContact","useParams","getContact","update_contact","Object","assign","updateContact","onUpdateContact","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sRAoBeA,EAjBA,WACX,OACI,yBAAKC,UAAU,mBACX,yBAAKA,UAAU,mEACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBAAvB,oBAIJ,6BACI,kBAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,yBAAlC,sB,yBCqBLE,EA3BC,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,UACjBC,EAAWC,cACVC,EAAyBJ,EAAzBI,KAAMC,EAAmBL,EAAnBK,MAAOC,EAAYN,EAAZM,MAAMC,EAAMP,EAANO,GAC1B,OACQ,4BACF,4BACA,yBAAKV,UAAU,kCACX,2BAAOW,QAASP,EAAWQ,KAAK,WAAWZ,UAAU,yBACrD,2BAAOA,UAAU,2BAGzB,4BAAI,kBAAC,IAAD,CAAQO,KAAMA,EAAMM,KAAK,KAAKC,OAAO,IAAzC,IAAkDP,GAClD,4BAAKC,GACL,4BAAKC,GACL,wBAAIT,UAAU,WACV,kBAAC,IAAD,CAAMC,GAAE,wBAAmBS,IACvB,0BAAMV,UAAU,uBAAhB,SAEJ,kBAAC,IAAD,CAAMC,GAAG,KACL,0BAAMD,UAAU,iBAAiBe,QAAS,kBAAMV,ECDjC,SAACK,GAAD,MAAS,CAClCE,KCvB0B,iBDwB1BI,QAASN,GDD0DO,CAAcP,MAAvE,qBG+BCQ,EAnDE,WACb,IAAMb,EAAWC,cADE,EAEea,oBAAS,GAFxB,mBAEZf,EAFY,KAEDgB,EAFC,KAGbC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMpB,QAAQkB,YAChDG,EAAmBF,aAAY,SAACC,GAAD,OAAWA,EAAMpB,QAAQqB,oBAa9D,OAVFC,qBAAU,WAEJpB,EADCD,EFgBgC,CACrCQ,KC3B0B,iBD4B1BI,QEjB8BK,EAASK,KAAI,SAACvB,GAAD,OAAaA,EAAQO,OFqBjC,CAC/BE,KChCyB,oBCgBzB,CAACR,IAGG,6BAEQoB,EAAiBG,OAAS,EACtB,4BAAQ3B,UAAU,uBAAuBe,QAAS,kBAAKV,EFc7B,CAC1CO,KCpCsB,iBCqBN,eACF,KAEN,2BAAOgB,MAAM,gBACvB,2BAAO5B,UAAU,wBACf,4BACE,4BACI,yBAAKA,UAAU,kCACX,2BAAOU,GAAG,YAAYE,KAAK,WAAWZ,UAAU,uBAChD6B,MAAOzB,EACPW,QAAS,kBAAKK,GAAchB,MAC5B,2BAAO0B,QAAQ,YAAY9B,UAAU,2BAG7C,oCACA,oCACA,qCACA,+BAGJ,+BAEQqB,EAASK,KAAI,SAACvB,GAAD,OAAc,kBAAC,EAAD,CAASA,QAASA,EAAS4B,IAAK5B,EAAQO,GAAIN,UAAWA,W,0CC1CtF4B,EAAe,CACjBX,SAAU,CACN,CACE,GAAM,EACN,KAAQ,gBAER,MAAS,oBAET,MAAS,oBAGX,CACE,GAAM,EACN,KAAQ,eAER,MAAS,kBAET,MAAS,oBAGX,CACE,GAAM,EACN,KAAQ,mBAER,MAAS,uBAET,MAAS,oBAGX,CACE,GAAM,EACN,KAAQ,mBAER,MAAS,uBAET,MAAS,oBAGX,CACE,GAAM,EACN,KAAQ,mBAER,MAAS,sBAET,MAAS,oBAGX,CACE,GAAM,EACN,KAAQ,kBAER,MAAS,uBAET,MAAS,oBAGX,CACE,GAAM,EACN,KAAQ,kBAER,MAAS,sBAET,MAAS,oBAGX,CACE,GAAM,EACN,KAAQ,yBAER,MAAS,4BAET,MAAS,oBAGX,CACE,GAAM,EACN,KAAQ,kBAER,MAAS,qBAET,MAAS,oBAGX,CACE,GAAM,GACN,KAAQ,qBAER,MAAS,yBAET,MAAS,qBAIflB,QAAS,KACTqB,iBAAiB,IClGNS,4BAAgB,CAAE9B,QDqGH,WAAkC,IAAjCoB,EAAgC,uDAAxBS,EAAaE,EAAW,uCAC3D,OAAOA,EAAOtB,MACV,IF1GsB,iBE2GlB,kCACOW,GADP,IAEIF,SAAS,CAACa,EAAOlB,SAAT,mBAAqBO,EAAMF,aAE3C,IF9GmB,cE+GjB,IAAIc,EAAMZ,EAAMF,SAASe,QAAO,SAACjC,GAAD,OAAaA,EAAQO,KAAOwB,EAAOlB,WACnEmB,EAAMA,EAAIE,SAFZ,oBAGiBF,GAHjB,IAGE,IAAI,EAAJ,qBACA,CAAC,IADOG,EACR,QACEH,EAAMG,GALV,8BAOE,kCACKf,GADL,IAEEpB,QAASgC,IAEX,IFxHoB,iBEyHlB,kCACKZ,GADL,IAEEF,SAAUE,EAAMF,SAASK,KAAI,SAACvB,GAAD,OAAaA,EAAQO,KAAOwB,EAAOlB,QAAQN,GAAKwB,EAAOlB,QAASb,OAE/F,IF5HkB,iBE6Hd,kCACKoB,GADL,IAEEF,SAAUE,EAAMF,SAASe,QAAO,SAACjC,GAAD,OAAaA,EAAQO,KAAOwB,EAAOlB,aAGvE,IFjIgB,iBEkIZ,kCACKO,GADL,IAEEC,iBAAkBU,EAAOlB,UAE7B,IFrIa,gBEsIT,kCACGO,GADH,IAEAC,iBAAkB,KAGpB,IF1IQ,aE2IJ,kCACKD,GADL,IAEFF,SAAS,KAGrB,QACA,OAAOE,ME/IAgB,EAFDC,sBAAYC,EAAaC,iC,yBC8CxBC,EA7CI,WACf,IAAIC,EAAUC,cACRxC,EAAWC,cAFI,EAGEa,mBAAS,IAHX,mBAGdZ,EAHc,KAGTuC,EAHS,OAII3B,mBAAS,IAJb,mBAIdV,EAJc,KAIRsC,EAJQ,OAKI5B,mBAAS,IALb,mBAKdX,EALc,KAKRwC,EALQ,KAkBrB,OACI,6BACI,yBAAKhD,UAAU,wBACf,yBAAKA,UAAU,eAAf,kBACA,yBAAKA,UAAU,aACX,0BAAMiD,SAAU,SAACC,GAAD,OAhBN,SAAAA,GAClBA,EAAEC,iBACF,IAAMC,EAAc,CAChB1C,GAAI2C,IAAQC,WACZ/C,KAAMA,EACNC,MAAOA,EACPC,MAAOA,GAEXJ,ENhBgC,CACpCO,KCP0B,iBDQ1BI,QMcwBoC,IACpBR,EAAQW,KAAK,KAOiBC,CAAcN,KAChC,yBAAKlD,UAAU,cACX,2BAAOY,KAAK,OAAOZ,UAAU,eAAeyD,YAAY,kBAAkB5B,MAAOtB,EACjFmD,SAAU,SAACR,GAAD,OAAMJ,EAAQI,EAAES,OAAO9B,WAErC,yBAAK7B,UAAU,cACX,2BAAOY,KAAK,OAAOZ,UAAU,eAAeyD,YAAY,kBAAkB5B,MAAOrB,EACjFkD,SAAU,SAACR,GAAD,OAAMF,EAASE,EAAES,OAAO9B,WAEtC,yBAAK7B,UAAU,cACX,2BAAOY,KAAK,OAAOZ,UAAU,eAAeyD,YAAY,4BAA4B5B,MAAOpB,EAC3FiD,SAAU,SAACR,GAAD,OAAMH,EAASG,EAAES,OAAO9B,WAEtC,4BAAQ7B,UAAU,kBAAkBY,KAAK,UAAzC,2BCoBLgD,EAtDK,WAAO,IAClBlD,EAAMmD,cAANnD,GACDkC,EAAUC,cACRxC,EAAWC,cACXH,EAAUmB,aAAY,SAAAC,GAAK,OAAIA,EAAMpB,QAAQA,WAJ7B,EAKCgB,mBAAS,IALV,mBAKfZ,EALe,KAKVuC,EALU,OAMG3B,mBAAS,IANZ,mBAMfV,EANe,KAMTsC,EANS,OAOG5B,mBAAS,IAPZ,mBAOfX,EAPe,KAOTwC,EAPS,KAUrBvB,qBAAW,WACQ,MAAXtB,IAEA2C,EAAQ3C,EAAQI,MAChByC,EAAS7C,EAAQK,OACjBuC,EAAS5C,EAAQM,QAErBJ,EPbiB,SAACK,GAAD,MAAS,CAC/BE,KCbuB,cDcvBI,QAASN,GOWKoD,CAAWpD,MACtB,CAACP,IASJ,OACI,6BACI,yBAAKH,UAAU,wBACf,yBAAKA,UAAU,eAAf,kBACA,yBAAKA,UAAU,aACX,0BAAMiD,SAAU,SAACC,GAAD,OAZJ,SAACA,GACpBA,EAAEC,iBAEF,IAAMY,EAAiBC,OAAOC,OAAO9D,EAAS,CAACI,KAAKA,EAAKC,MAAMA,EAAMC,MAAMA,IAC3EJ,EPdoB,SAACF,GAAD,MAAc,CACvCS,KClB0B,iBDmB1BI,QAASb,GOYK+D,CAAcH,IACvBnB,EAAQW,KAAK,KAOiBY,CAAgBjB,KACnC,yBAAKlD,UAAU,cACX,2BAAOY,KAAK,OAAOZ,UAAU,eAAeyD,YAAY,kBAAkB5B,MAAOtB,EACjFmD,SAAU,SAACR,GAAD,OAAMJ,EAAQI,EAAES,OAAO9B,WAErC,yBAAK7B,UAAU,cACX,2BAAOY,KAAK,OAAOZ,UAAU,eAAeyD,YAAY,0BAA0B5B,MAAOrB,EACzFkD,SAAU,SAACR,GAAD,OAAMF,EAASE,EAAES,OAAO9B,WAEtC,yBAAK7B,UAAU,cACX,2BAAOY,KAAK,OAAOZ,UAAU,eAAeyD,YAAY,4BAA4B5B,MAAOpB,EAC3FiD,SAAU,SAACR,GAAD,OAAMH,EAASG,EAAES,OAAO9B,WAEtC,4BAAQ7B,UAAU,kBAAkBY,KAAK,UAAzC,uBCtBLwD,MAvBf,WACE,OACE,kBAAC,IAAD,CAAU7B,MAAOA,GACjB,kBAAC,IAAD,KACA,yBAAKvC,UAAU,mBACf,yBAAKA,UAAU,OACb,4BAAQA,UAAU,cACjB,kBAAC,EAAD,MACC,yBAAKA,UAAU,QACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqE,OAAK,EAACC,KAAK,IAAIC,UAAWrD,IACjC,kBAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,eAAeC,UAAW5B,IAC5C,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,oBAAoBC,UAAWX,YCTxCY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1f578459.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <nav className=\"navbar shadow fixed-top navbar-expand-sm navbar-dark bg-primary\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        CONTACT MANAGER\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/contact/add\" className=\"btn btn-light ml-auto\">Create Contact</Link>\r\n                </div>\r\n            </nav>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport Avatar from 'react-avatar';\r\nimport {Link } from 'react-router-dom';\r\nimport {deleteContact} from '../../action/ContactAction';\r\nimport {useDispatch} from 'react-redux';\r\n\r\n\r\nconst Contact = ({contact, selectAll}) => {\r\n    const dispatch = useDispatch();\r\n    const {name, phone, email,id} = contact;\r\n    return (\r\n            <tr>\r\n          <td> \r\n          <div className=\"custom-control custom-checkbox\">\r\n              <input checked={selectAll} type=\"checkbox\" className=\"custom-control-input\"/>\r\n              <label className=\"custom-control-label\"></label>\r\n          </div>\r\n          </td>\r\n      <td><Avatar name={name} size=\"45\" round={true}/> {name}</td>\r\n      <td>{phone}</td>\r\n      <td>{email}</td>\r\n      <td className=\"actions\">\r\n          <Link to={`/contact/edit/${id}`}>\r\n              <span className=\"material-icons mr-2\">edit</span>\r\n        </Link>\r\n          <Link to=\"#\">\r\n              <span className=\"material-icons\" onClick={() => dispatch(deleteContact(id))}>remove_circle</span>\r\n          </Link>\r\n      </td>\r\n    </tr>\r\n       \r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import {CREATE_CONTACT,\r\n     GET_CONTACT,\r\n      UPDATE_CONTACT, DELETE_CONTACT,\r\n      SELECT_CONTACT,CLEAR_CONTACT, DELETE_ALL} from '../constant/type';\r\n\r\n//action\r\nexport const addContact = (contact) => ({\r\n    type: CREATE_CONTACT,\r\n    payload: contact, \r\n});\r\n\r\n//get a action\r\n\r\nexport const getContact = (id) => ({\r\n    type: GET_CONTACT,\r\n    payload: id,\r\n})\r\n\r\n//GET AN UPDATE OF COMTACT\r\nexport const updateContact = (contact) => ({\r\n    type: UPDATE_CONTACT,\r\n    payload: contact,\r\n})\r\n\r\n//DELETE A CONTACT\r\nexport const deleteContact = (id) => ({\r\n    type: DELETE_CONTACT,\r\n    payload: id,\r\n})\r\n//select entire contact\r\nexport const selectAllContact = (id) => ({\r\n    type: SELECT_CONTACT,\r\n    payload: id,\r\n})\r\n\r\n//clear contact\r\nexport const clearContact = () => ({\r\n    type: CLEAR_CONTACT,\r\n    \r\n})\r\n//delete all\r\nexport const deleteAllContact = (payload) => ({\r\n    type: DELETE_ALL,\r\n})\r\n","export const CREATE_CONTACT = 'CREATE_CONTACT';\r\nexport const GET_CONTACT = 'GET_CONTACT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const SELECT_CONTACT = 'SELECT_CONTACT';\r\nexport const CLEAR_CONTACT = 'CLEAR_CONTACT';\r\nexport const DELETE_ALL = 'DELETE_ALL';","import React, {useState,useEffect} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport Contact from './Contact';\r\nimport {selectAllContact, clearContact, deleteAllContact} from '../../action/ContactAction';\r\n\r\n\r\nconst Contacts = () => {\r\n    const dispatch = useDispatch();\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const contacts = useSelector((state) => state.contact.contacts);\r\n    const selectedContacts = useSelector((state) => state.contact.selectedContacts);\r\n    \r\n     \r\n  useEffect(()=>{\r\n      if(selectAll) {\r\n        dispatch(selectAllContact(contacts.map((contact) => contact.id)));\r\n      } \r\n      else \r\n      {\r\n          dispatch(clearContact());\r\n      }\r\n  },[selectAll]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                selectedContacts.length > 1 ? (\r\n                    <button className=\"btn btn-success mb-3\" onClick={()=> dispatch(deleteAllContact())}> Delete All</button>\r\n                ):null\r\n            }\r\n            <table class=\"table shadow\">\r\n  <thead className=\"bg-danger text-white\">\r\n    <tr>\r\n      <th >\r\n          <div className=\"custom-control custom-checkbox\">\r\n              <input id=\"selectAll\" type=\"checkbox\" className=\"custom-control-input\" \r\n              value={selectAll}\r\n              onClick={()=> setSelectAll(!selectAll)}/>\r\n              <label htmlFor=\"selectAll\" className=\"custom-control-label\"></label>\r\n          </div>\r\n      </th>\r\n      <th >Name</th>\r\n      <th >Date</th>\r\n      <th >Email</th>\r\n      <th></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {\r\n          contacts.map((contact) => (<Contact contact={contact} key={contact.id} selectAll={selectAll} /> ))\r\n      }    \r\n  </tbody>\r\n</table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts\r\n","import {CREATE_CONTACT,GET_CONTACT, UPDATE_CONTACT, \r\n  DELETE_CONTACT,SELECT_CONTACT,\r\n  CLEAR_CONTACT,DELETE_ALL} from '../constant/type';\r\n//import Contact from '../components/contact/Contact';\r\n\r\n\r\n// 'contacts' is whole data and 'contact' is modfified data\r\nconst initialState = {\r\n    contacts: [\r\n        {\r\n          \"id\": 1,\r\n          \"name\": \"Leanne Graham\",\r\n          \r\n          \"email\": \"Leanne@Graham.biz\",\r\n          \r\n          \"phone\": \"31-01-2018 15:04\",\r\n\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"Ervin Howell\",\r\n\r\n          \"email\": \"Ervin@Howell.tv\",\r\n          \r\n          \"phone\": \"31-01-2018 15:04\",\r\n          \r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"Clementine Bauch\",\r\n          \r\n          \"email\": \"Clementine@Bauch.net\",\r\n         \r\n          \"phone\": \"31-01-2018 15:04\",\r\n          \r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"Patricia Lebsack\",\r\n          \r\n          \"email\": \"Patricia@Lebsack.org\",\r\n    \r\n          \"phone\": \"31-01-2018 15:04\",\r\n         \r\n        },\r\n        {\r\n          \"id\": 5,\r\n          \"name\": \"Chelsey Dietrich\",\r\n          \r\n          \"email\": \"Chelsey@Dietrich.ca\",\r\n        \r\n          \"phone\": \"31-01-2018 15:04\",\r\n          \r\n        },\r\n        {\r\n          \"id\": 6,\r\n          \"name\": \"Dennis Schulist\",\r\n          \r\n          \"email\": \"Dennis@Schulist.info\",\r\n         \r\n          \"phone\": \"31-01-2018 15:04\",\r\n         \r\n        },\r\n        {\r\n          \"id\": 7,\r\n          \"name\": \"Kurtis Weissnat\",\r\n          \r\n          \"email\": \"Kurtis@Weissnat.biz\",\r\n          \r\n          \"phone\": \"31-01-2018 15:04\",\r\n         \r\n        },\r\n        {\r\n          \"id\": 8,\r\n          \"name\": \"Nicholas Runolfsdottir\",\r\n         \r\n          \"email\": \"Nicholas@Runolfsdottir.me\",\r\n          \r\n          \"phone\": \"31-01-2018 15:04\",\r\n         \r\n        },\r\n        {\r\n          \"id\": 9,\r\n          \"name\": \"Glenna Reichert\",\r\n          \r\n          \"email\": \"Glenna@Reichert.io\",\r\n         \r\n          \"phone\": \"31-01-2018 15:04\",\r\n         \r\n        },\r\n        {\r\n          \"id\": 10,\r\n          \"name\": \"Clementina DuBuque\",\r\n          \r\n          \"email\": \"Clementina@DuBuque.biz\",\r\n         \r\n          \"phone\": \"31-01-2018 15:04\",\r\n          \r\n        }\r\n      ],\r\n    contact: null,\r\n    selectedContacts:[],\r\n};\r\n\r\nexport const contactReducer = (state = initialState,action) => {\r\n    switch(action.type){\r\n        case CREATE_CONTACT:\r\n            return{\r\n                ...state,\r\n                contacts:[action.payload, ...state.contacts],\r\n            };\r\n        case GET_CONTACT:\r\n          let arr = state.contacts.filter((contact) => contact.id === action.payload);\r\n          arr = arr.values();\r\n          for(let val of arr)\r\n          {\r\n            arr = val;\r\n          }\r\n          return{\r\n            ...state,\r\n            contact: arr,\r\n          };  \r\n          case UPDATE_CONTACT:\r\n            return{\r\n              ...state,\r\n              contacts: state.contacts.map((contact) => contact.id === action.payload.id ? action.payload: contact),\r\n            }\r\n            case DELETE_CONTACT:\r\n                return{\r\n                  ...state,\r\n                  contacts: state.contacts.filter((contact) => contact.id !== action.payload),\r\n                }\r\n              \r\n              case SELECT_CONTACT:\r\n                  return{\r\n                    ...state,\r\n                    selectedContacts: action.payload,\r\n                }\r\n                case CLEAR_CONTACT:\r\n                    return{\r\n                    ...state,\r\n                    selectedContacts: [],\r\n                    }\r\n                  \r\n                  case DELETE_ALL:\r\n                      return{\r\n                        ...state,\r\n                    contacts:[],     \r\n                      }\r\n                    \r\n        default:\r\n        return state;\r\n    }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport {contactReducer} from './ContactReducer';\r\n\r\nexport default combineReducers({ contact: contactReducer})","import {createStore} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootReducer from './reducer';\r\n\r\n\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools())\r\n\r\nexport default store;","import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {addContact} from '../../action/ContactAction';\r\nimport shortid from 'shortid';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst AddContact = () => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [name,setName] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const [phone,setPhone] = useState(\"\");\r\n\r\n    const createContact = e => {\r\n        e.preventDefault();\r\n        const new_contact = {\r\n            id: shortid.generate(),\r\n            name: name,\r\n            phone: phone,\r\n            email: email\r\n        }\r\n        dispatch(addContact(new_contact));\r\n        history.push(\"/\");\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"card border-0 shadow\">\r\n            <div className=\"card-header\"> Add A Contact</div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={(e)=> createContact(e)}> \r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Name\" value={name}\r\n                        onChange={(e)=> setName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Date\" value={phone}\r\n                        onChange={(e)=> setPhone(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your E-mail Address\" value={email}\r\n                        onChange={(e)=> setEmail(e.target.value)}/>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" type=\"submit\">Create New Contact</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddContact\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getContact, updateContact} from '../../action/ContactAction';\r\n//import shortid from 'shortid';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useParams} from 'react-router-dom';\r\n//import Contact from './Contact';\r\n\r\n\r\nconst EditContact = () => {\r\n    let {id} = useParams();\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const contact = useSelector(state => state.contact.contact)\r\n    const [name,setName] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const [phone,setPhone] = useState(\"\");\r\n\r\n    \r\n     useEffect (()=> {\r\n         if (contact != null)\r\n         {\r\n             setName(contact.name)\r\n             setPhone(contact.phone)\r\n             setEmail(contact.email)\r\n         }\r\n         dispatch(getContact(id));\r\n     },[contact]);\r\n\r\n     const onUpdateContact= (e) => {\r\n         e.preventDefault(); \r\n\r\n         const update_contact = Object.assign(contact, {name:name,phone:phone,email:email});\r\n         dispatch(updateContact(update_contact));\r\n         history.push(\"/\")\r\n     };\r\n    return (\r\n        <div>\r\n            <div className=\"card border-0 shadow\">\r\n            <div className=\"card-header\"> Add A Contact</div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={(e) => onUpdateContact(e)} > \r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Name\" value={name}\r\n                        onChange={(e)=> setName(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Phone Number\" value={phone}\r\n                        onChange={(e)=> setPhone(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your E-mail Address\" value={email}\r\n                        onChange={(e)=> setEmail(e.target.value)}/>\r\n                    </div>\r\n                    <button className=\"btn btn-warning\" type=\"submit\">Update Contact</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default EditContact\r\n","import React from 'react';\nimport './style/App.scss';\nimport Navbar from './components/Navbar';\nimport Contacts from './components/contact/Contacts';\nimport {Provider} from 'react-redux';\nimport store from './Store';\nimport {BrowserRouter as Router, Route,Switch} from 'react-router-dom';\nimport AddContact from './components/contact/AddContact';\nimport EditContact from './components/contact/EditContact';\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Router>\n    <div className=\"container-fluid\">\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <Navbar/>\n        <div className=\"py-3\">\n         <Switch>\n           <Route exact path=\"/\" component={Contacts}/>\n           <Route exact path=\"/contact/add\" component={AddContact}/>\n           <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n         </Switch>\n        </div>\n      </header>\n    </div>\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}